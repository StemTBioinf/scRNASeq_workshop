library(Seurat)
library(dplyr)
setwd('/home/parashar/Data/scRNASeq_workshop/data/neuron_1k_v2')
getwd()
data.tenx.v2 <- Read10X(data.dir = 'filtered_feature_bc_matrix')
data.tenx.v2 <- Read10X(data.dir = 'seurat_matrix')
neuro.v2 <- CreateSeuratObject(raw.data = data.tenx.v2, min.cells = 3, min.genes = 200,
project = "scRNA-Seq cortex")
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI"), nCol = 2)
mito.genes <- grep(pattern = "^mt-", x = rownames(x = neuro.v2), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^Mt-", x = rownames(x = neuro.v2), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^MT-", x = rownames(x = neuro.v2), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^MT", x = rownames(x = neuro.v2), value = TRUE)
mito.genes
ownames(x = neuro.v2),
rownames(x = neuro.v2)
neuro.v2
row.names(neuro.v2)
rownames(neuro.v2)
rownames(x=neuro.v2)
rownames(x=neuro.v2@data)
rownames(neuro.v2@data)
gene.names <- rownames(neuro.v2@data)
gene.names
mito.genes <- grep(pattern = "^mt-", x=gene.names, value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^Mt-", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^MT-", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^MT", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^MT-", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^mt-", x=gene.names, value = TRUE)
mito.genes
length(x=mito.genes)
neuro.v2@raw.data[mito.genes, ]
Matrix::colSums(pbmc@raw.data)
Matrix::colSums(neuro.v2@raw.dat
)
Matrix::colSums(neuro.v2@raw.data)
head(Matrix::colSums(neuro.v2@raw.dat)
head(Matrix::colSums(neuro.v2@raw.data))
head(neuro.v2@raw.data[mito.genes, ])
mito.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[mito.genes, ])
total.umi.per.cell <-Matrix::colSums(neuro.v2@raw.data)
mito.umi.per.cell
percent.mito <- 100*mito.umi.per.cell/total.umi.per.cell
percent.mito
head(mito.umi.per.cell)
head(total.umi.per.cell)
percent.mito <- 100*mito.umi.per.cell/total.umi.per.cell
head(percent.mito)
ribo1.genes <- grep(pattern = "^RBS-", x = rownames(neuro.v2@data), value = TRUE)
ribo1.genes
ribo1.genes <- grep(pattern = "^Rps-", x = rownames(neuro.v2@data), value = TRUE)
ribo1.genes
gene.names
ribo1.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo1.genes
ribo.large.genes <- grep(pattern = "^Rpl", x = rownames(neuro.v2@data), value = TRUE)
ribo.large.genes
ribo.genes <- ribo.small.genes + ribo.large.genes
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo.small.genes
ribo.large.genes <- grep(pattern = "^Rpl", x = rownames(neuro.v2@data), value = TRUE)
ribo.large.genes
ribo.genes <- ribo.small.genes + ribo.large.genes
ribo.genes <- c(ribo.small.genes, ribo.large.genes)
ribo.genes
length(ribo.genes)
ribo.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[ribo.genes, ])
head(ribo.umi.per.cell)
percent.ribo <- 100*ribo.umi.per.cell/total.umi.per.cell
head(percent.ribo)
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data))
ribo.small.genes
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo.small.genes
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data))
ribo.small.genes
gene.names[ribo.small.genes]
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.mito, col.name = "percent.mito")
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.ribo, col.name = "percent.ribo")
VlnPlot(object = pbmc, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
GenePlot(object = pbmc, gene1 = "nUMI", gene2 = "nGene")
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
GenePlot(object = pbmc, gene1 = "nUMI", gene2 = "percent.mito")
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "percent.mito")
neuro.v2@meta.data
neuro.v2@meta.data$nGene < 1000
neuro.v2@meta.data$nGene < 1000 & neuro.v2@meta.data$nUMI > 10000
neuro.v2@meta.data[neuro.v2@meta.data$nGene < 1000 & neuro.v2@meta.data$nUMI > 10000]
neuro.v2@meta.data[[neuro.v2@meta.data$nGene < 1000 & neuro.v2@meta.data$nUMI > 10000]]
head(neuro.v2@meta.data)
head(neuro.v2@meta.data)
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
filter.test1 <- neuro.v2@meta.data$nGene < 1000
table(filter.test1)
head(filter.test1)
table(filter.test1)
filter.test2 <- neuro.v2@meta.data$nUMI > 15000
head(filter.test2)
table(filter.test2)
hist(neuro.v2@meta.data$nUMI)
hist(neuro.v2@meta.data$nUMI, breaks = 20)
hist(neuro.v2@meta.data$nUMI, breaks = 20, density = TRUE)
hist(neuro.v2@meta.data$nUMI, breaks = 20, freq = TRUE)
hist(neuro.v2@meta.data$nUMI, breaks = 20, freq = FALSE)
hist(neuro.v2@meta.data$nUMI, breaks = 20)
cumsum(neuro.v2@meta.data$nUMI)
plot(cumsum(neuro.v2@meta.data$nUMI))
plot(cumsum(sort(neuro.v2@meta.data$nUMI)))
hist(neuro.v2@meta.data$nUMI, breaks = 10)
table(filter.test1)
table(filter.test2)
table(filter.test1 & filter.test2)
wierd.cells <- filter.test1 & filter.test2
table(wierd.cells)
neuro.v2@meta.data[wierd.cells]
neuro.v2@meta.data[wierd.cells, ]
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
rownames(neuro.v2@meta.data[wierd.cells, ])
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene", cell.ids = rownames(neuro.v2@meta.data[wierd.cells, ]))
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene", cell.ids = rownames(neuro.v2@meta.data[wierd.cells, ]))
library(gglot)
library(ggplot)
library(Seurat)
library(dplyr)
install.packages(ggplot)
install.packages('ggplot')
library(ggplot2)
wierd.cells <- filter.test1 & filter.test2
table(wierd.cells)
neuro.v2@meta.data['wierd'] <- wierd.cells
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(shape=wierd))
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(size=wierd))
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.mito, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.ribo, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
neuro.v2
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
neuro.v2
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.mito, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.ribo, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.mito, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.mito)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.ribo)) + geom_point()
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
neuro.v2
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.mito)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.ribo)) + geom_point()
neuro.v2 <- FilterCells(object = neuro.v2, subset.names = c("nGene", "nUMI", "percent.mito"),
low.thresholds = c(200, 1000, -Inf), high.thresholds = c(4500, 20000, 20))
neuro.v2
filter.test1 <- neuro.v2@meta.data$nGene < 1000
head(filter.test1)
table(filter.test1)
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
