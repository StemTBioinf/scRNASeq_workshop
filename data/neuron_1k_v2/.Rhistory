ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo.small.genes
ribo.large.genes <- grep(pattern = "^Rpl", x = rownames(neuro.v2@data), value = TRUE)
ribo.large.genes
ribo.genes <- c(ribo.small.genes, ribo.large.genes)
ribo.genes
length(ribo.genes)
ribo.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[ribo.genes, ])
head(ribo.umi.per.cell)
percent.ribo <- 100*ribo.umi.per.cell/total.umi.per.cell
head(percent.ribo)
head(neuro.v2@meta.data)
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.mito, col.name = "percent.mito")
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.ribo, col.name = "percent.ribo")
head(neuro.v2@meta.data)
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.mito)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.ribo)) + geom_point()
neuro.v2 <- FilterCells(object = neuro.v2, subset.names = c("nGene", "nUMI", "percent.mito"),
low.thresholds = c(200, 500, -Inf), high.thresholds = c(4500, 20000, 20))
neuro.v2
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
filter.test1 <- neuro.v2@meta.data$nGene < 1000
head(filter.test1)
table(filter.test1)
filter.test2 <- neuro.v2@meta.data$nUMI > 15000
head(filter.test2)
table(filter.test2)
hist(neuro.v2@meta.data$nUMI, breaks = 10)
wierd.cells <- filter.test1 & filter.test2
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram()
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 1000)
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 500)
wierd.cells <- filter.test1 & filter.test2
table(wierd.cells)
neuro.v2@meta.data['wierd'] <- wierd.cells
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
neuro.v2@meta.data['wierd'] == TRUE
neuro.v2@meta.data][wierd.cells, ]
neuro.v2@meta.data[wierd.cells, ]
?SubsetData()
table(wierd.cells)
table(!wierd.cells)
wierd.cells[!wierd.cells]
neuro.v2@meta.data[!wierd.cells]
neuro.v2@meta.data[!wierd.cells, 0]
neuro.v2@meta.data[!wierd.cells, ]
rownames(neuro.v2@meta.data[!wierd.cells, ])
neuro.v2@meta.data[wierd.cells, ]
remw.neuro.v2 <- SubsetData(neuro.v2, cells.use = rownames(neuro.v2@meta.data[!wierd.cells, ]))
remw.neuro.v2
neuro.v2
neuro.v2
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 500, color="black", fill="white")
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 500, color="black", fill="grey")
neuro.v2 <- NormalizeData(object = neuro.v2, normalization.method = "LogNormalize",
scale.factor = 1000)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = neuro.v2@var.genes)
neuro.v2@raw.data@Dim
neuro.v2@data@Dim
?CreateSeuratObject
neuro.v2 <- CreateSeuratObject(raw.data = data.tenx.v2, min.cells = 10, min.genes = 200,
project = "10x_v2")
neuro.v2
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI"), nCol = 2)
gene.names <- rownames(neuro.v2@data)
mito.genes <- grep(pattern = "^MT-", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^mt-", x=gene.names, value = TRUE)
mito.genes
length(x=mito.genes)
mito.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[mito.genes, ])
head(mito.umi.per.cell)
total.umi.per.cell <-Matrix::colSums(neuro.v2@raw.data)
head(total.umi.per.cell)
percent.mito <- 100*mito.umi.per.cell/total.umi.per.cell
head(percent.mito)
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo.small.genes
ribo.large.genes <- grep(pattern = "^Rpl", x = rownames(neuro.v2@data), value = TRUE)
ribo.large.genes
ribo.genes <- c(ribo.small.genes, ribo.large.genes)
ribo.genes
length(ribo.genes)
ribo.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[ribo.genes, ])
head(ribo.umi.per.cell)
percent.ribo <- 100*ribo.umi.per.cell/total.umi.per.cell
head(percent.ribo)
head(neuro.v2@meta.data)
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.mito, col.name = "percent.mito")
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.ribo, col.name = "percent.ribo")
head(neuro.v2@meta.data)
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.mito)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.ribo)) + geom_point()
neuro.v2 <- FilterCells(object = neuro.v2, subset.names = c("nGene", "nUMI", "percent.mito"),
low.thresholds = c(200, 500, -Inf), high.thresholds = c(4500, 20000, 20))
neuro.v2
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
filter.test1 <- neuro.v2@meta.data$nGene < 1000
head(filter.test1)
table(filter.test1)
filter.test2 <- neuro.v2@meta.data$nUMI > 15000
head(filter.test2)
table(filter.test2)
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 500, color="black", fill="grey")
wierd.cells <- filter.test1 & filter.test2
table(wierd.cells)
neuro.v2@meta.data[wierd.cells, ]
neuro.v2@meta.data['wierd'] <- wierd.cells
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.mito, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.ribo, y=nGene)) + geom_point(aes(color=wierd))
remw.neuro.v2 <- SubsetData(neuro.v2, cells.use = rownames(neuro.v2@meta.data[!wierd.cells, ]))
remw.neuro.v2
neuro.v2
neuro.v2 <- NormalizeData(object = neuro.v2, normalization.method = "LogNormalize",
scale.factor = 1000)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = neuro.v2@var.genes)
neuro.v2@raw.data@Dim
neuro.v2@data@Dim
neuro.v2@data
neuro.v2@raw
neuro.v2@raw.data
neuro.v2@data@Dim
neuro.v2@raw.data@Dim
dim(neuro.v2@meta.data)
head(neuro.v2@data)
head(rowsums(neuro.v2@data))
head(rowSums(neuro.v2@data))
head(colSums(neuro.v2@data))
neuro.v2@raw.data[c('AAACGGGTCGGAATCT'), ]
neuro.v2@raw.data[, c('AAACGGGTCGGAATCT')]
neuro.v2@data@Dimnames
neuro.v2@data@Dimnames[1]
neuro.v2@data@Dimnames[2]
head(neuro.v2@data@Dimnames[2])
head(neuro.v2@data@Dimnames[[2]])
neuro.v2[, neuro.v2@data@Dimnames[[2]])]
neuro.v2[, neuro.v2@data@Dimnames[[2]]]
neuro.v2@raw.data[, neuro.v2@data@Dimnames[[2]]]
head(neuro.v2@raw.data[, neuro.v2@data@Dimnames[[2]]])
gene.names <- rownames(neuro.v2@data)
gene.names
toMatch <- c("A1", "A9", "A6")
paste(toMatch,collapse="|")
length(ribo.genes)
length(x=mito.genes)
grep(pattern = "^Rps|^Rpl|^mt-", x = rownames(neuro.v2@data), value = TRUE)
grep(pattern = "^Rps|^Rpl|^mt-", x = rownames(neuro.v2@data))
genes.exclude <- grep(pattern = "^Rps|^Rpl|^mt-", x = gene.names)
genes.exclude
gene.names[genes.exclude]
gene.names]
gene.names[!genes.exclude]
gene.names[~genes.exclude]
gene.names[-genes.exclude]
length(gene.names)
length(genes.exclude)
length(genes.keep)
genes.keep <- gene.names[-genes.exclude]
length(genes.keep)
neuro.v2
genes.exclude.idx <- grep(pattern = "^Rps|^Rpl|^mt-", x = gene.names)
genes.exclude.idx
length(genes.exclude.idx)
gene.names[genes.exclude.idx]
genes.keep <- gene.names[-genes.exclude]
length(genes.keep)
length(cells.keep)
cells.keep <- colnames(neuro.v2@data)
length(cells.keep)
neuro.v2@raw.data[genes.keep, cells.keep]
head(neuro.v2@meta.data)
neuro.v2 <- CreateSeuratObject(neuro.v2@raw.data[genes.keep, cells.keep], project = "10x_v2", meta.data = neuro.v2@meta.data)
head(neuro.v2@meta.data)
neuro.v2 <- CreateSeuratObject(neuro.v2@raw.data[genes.keep, cells.keep], project = "10x_v2")
head(neuro.v2@meta.data)
neuro.v2 <- CreateSeuratObject(neuro.v2@raw.data[genes.keep, cells.keep], project = "10x_v2")
neuro.v2@meta.data['wierd'] <- neuro.v2@meta.data$nGene < 1000 & neuro.v2@meta.data$nUMI > 15000
neuro.v2
head(neuro.v2@meta.data)
neuro.v2 <- NormalizeData(object = neuro.v2, normalization.method = "LogNormalize",
scale.factor = 1000)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = neuro.v2@var.genes)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.1, x.high.cutoff = 2, y.cutoff = 1)
length(x = neuro.v2@var.genes)
neuro.v2 <- CreateSeuratObject(raw.data = data.tenx.v2, min.cells = 10, min.genes = 200,
project = "10x_v2")
neuro.v2
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI"), nCol = 2)
gene.names <- rownames(neuro.v2@data)
mito.genes <- grep(pattern = "^MT-", x = rownames(neuro.v2@data), value = TRUE)
mito.genes
mito.genes <- grep(pattern = "^mt-", x=gene.names, value = TRUE)
mito.genes
length(x=mito.genes)
mito.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[mito.genes, ])
head(mito.umi.per.cell)
total.umi.per.cell <-Matrix::colSums(neuro.v2@raw.data)
head(total.umi.per.cell)
percent.mito <- 100*mito.umi.per.cell/total.umi.per.cell
head(percent.mito)
ribo.small.genes <- grep(pattern = "^Rps", x = rownames(neuro.v2@data), value = TRUE)
ribo.small.genes
ribo.large.genes <- grep(pattern = "^Rpl", x = rownames(neuro.v2@data), value = TRUE)
ribo.large.genes
ribo.genes <- c(ribo.small.genes, ribo.large.genes)
ribo.genes
length(ribo.genes)
ribo.umi.per.cell <- Matrix::colSums(neuro.v2@raw.data[ribo.genes, ])
head(ribo.umi.per.cell)
percent.ribo <- 100*ribo.umi.per.cell/total.umi.per.cell
head(percent.ribo)
head(neuro.v2@meta.data)
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.mito, col.name = "percent.mito")
neuro.v2 <- AddMetaData(object = neuro.v2, metadata = percent.ribo, col.name = "percent.ribo")
head(neuro.v2@meta.data)
VlnPlot(object = neuro.v2, features.plot = c("nGene", "nUMI", "percent.mito", "percent.ribo"), nCol = 4)
GenePlot(object = neuro.v2, gene1 = "nUMI", gene2 = "nGene")
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.mito)) + geom_point()
ggplot(neuro.v2@meta.data, aes(x=nGene, y=percent.ribo)) + geom_point()
neuro.v2 <- FilterCells(object = neuro.v2, subset.names = c("nGene", "nUMI", "percent.mito"),
low.thresholds = c(200, 500, -Inf), high.thresholds = c(4500, 20000, 20))
neuro.v2
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point()
filter.test1 <- neuro.v2@meta.data$nGene < 1000
head(filter.test1)
table(filter.test1)
filter.test2 <- neuro.v2@meta.data$nUMI > 15000
head(filter.test2)
table(filter.test2)
ggplot(neuro.v2@meta.data, aes(x=nUMI)) + geom_histogram(binwidth = 500, color="black", fill="grey")
wierd.cells <- filter.test1 & filter.test2
table(wierd.cells)
neuro.v2@meta.data[wierd.cells, ]
neuro.v2@meta.data['wierd'] <- wierd.cells
ggplot(neuro.v2@meta.data, aes(x=nUMI, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.mito, y=nGene)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=percent.ribo, y=nGene)) + geom_point(aes(color=wierd))
remw.neuro.v2 <- SubsetData(neuro.v2, cells.use = rownames(neuro.v2@meta.data[!wierd.cells, ]))
remw.neuro.v2
neuro.v2
neuro.v2 <- NormalizeData(object = neuro.v2, normalization.method = "LogNormalize",
scale.factor = 1000)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = neuro.v2@var.genes)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.1, x.high.cutoff = 2, y.cutoff = 1)
length(x = neuro.v2@var.genes)
gene.names <- rownames(neuro.v2@data)
length(gene.names)
genes.exclude.idx <- grep(pattern = "^Rps|^Rpl|^mt-", x = gene.names)
genes.exclude.idx
length(genes.exclude.idx)
gene.names[genes.exclude.idx]
genes.keep <- gene.names[-genes.exclude]
length(genes.keep)
cells.keep <- colnames(neuro.v2@data)
length(cells.keep)
head(neuro.v2@meta.data)
neuro.v2 <- CreateSeuratObject(neuro.v2@raw.data[genes.keep, cells.keep], project = "10x_v2")
neuro.v2@meta.data['wierd'] <- neuro.v2@meta.data$nGene < 1000 & neuro.v2@meta.data$nUMI > 15000
neuro.v2
head(neuro.v2@meta.data)
neuro.v2 <- NormalizeData(object = neuro.v2, normalization.method = "LogNormalize",
scale.factor = 1000)
neuro.v2 <- FindVariableGenes(object = neuro.v2, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.1, x.high.cutoff = 2, y.cutoff = 1)
length(x = neuro.v2@var.genes)
cc.genes <- readLines(con = "../regev_lab_cell_cycle_genes.txt")
length(cc.genes)
c.genes
cc.genes
substring(cc.genes)
substring(cc.genes, 1, 1)
substring(cc.genes, 1)
substring(cc.genes, 1, 1)
substring(cc.genes, 2, -1)
substring(cc.genes, 2, 10)
tolower(substring(cc.genes, 2, 10))
tolower(substring(cc.genes, 2, inf))
tolower(substring(cc.genes, 2, Inf))
tolower(substring(cc.genes, 2, 100))
paste(substring(cc.genes, 1, 1), tolower(substring(cc.genes, 2, 100)))
paste0(substring(cc.genes, 1, 1), tolower(substring(cc.genes, 2, 100)))
cc.genes <- readLines(con = "../regev_lab_cell_cycle_genes.txt")
length(cc.genes)
cc.genes
letters.first <- substring(cc.genes, 1, 1)
letters.first
letters.rest <- substring(cc.genes, 2, 100)
letters.rest
cc.genes <- paste0(letters.first, letters.rest)
cc.genes
cc.genes <- paste0(letters.first, tolower(letters.rest))
cc.genes
s.genes <- cc.genes[1:43]
g2m.genes <- cc.genes[44:97]
s.genes <- cc.genes[1:43]
s.genes
g2m.genes <- cc.genes[44:97]
g2m.genes
neuro.v2 <- CellCycleScoring(object = neuro.v2, s.genes = s.genes, g2m.genes = g2m.genes)
neuro.v2@meta.data
head(neuro.v2@meta.data)
table(neuro.v2@meta.data$Phase)
ggplot(neuro.v2@meta.data, aes(x=S.Score)) + geom_histogram(binwidth = 500, color="black", fill="grey")
ggplot(neuro.v2@meta.data, aes(x=S.Score)) + geom_histogram(binwidth = 1, color="black", fill="grey")
ggplot(neuro.v2@meta.data, aes(x=S.Score)) + geom_histogram(binwidth = 0.1, color="black", fill="grey")
ggplot(neuro.v2@meta.data, aes(x=S.Score)) + geom_histogram(binwidth = 0.01, color="black", fill="grey")
ggplot(neuro.v2@meta.data, aes(x=G2M.Score)) + geom_histogram(binwidth = 0.01, color="black", fill="grey")
ggplot(neuro.v2@meta.data, aes(x=.Score, y=G2M.Score)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference))
neuro.v2@meta.data$CC.Difference <- neuro.v2@meta.data$S.Score - neuro.v2@meta.data$G2M.Score
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(size=CC.Difference))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_fill_grey()
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_fill_grey()
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_fill_grey() + theme_classic()
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + scale_fill_grey() + theme_classic() + geom_point(aes(color=CC.Difference))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_color_gradient(low="blue", high="red")
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_color_gradient(low="red", high="red")
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_color_gradient(low="blue", high="red")
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_color_gradient(low="white", high="black")
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_color_gradientn(colours = rainbow(5))
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_colour_gradient2()
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=Phase))
neuro.v2@meta.data$CC.Difference <- neuro.v2@meta.data$S.Score - neuro.v2@meta.data$G2M.Score
ggplot(neuro.v2@meta.data, aes(x=S.Score, y=G2M.Score)) + geom_point(aes(color=CC.Difference)) + scale_colour_gradient2()
neuro.v2 <- RunPCA(object = neuro.v2, pc.genes = neuro.v2@var.genes,
do.print = TRUE, pcs.print = 1:5,genes.print = 5)
neuro.v2 <- ScaleData(object = neuro.v2, vars.to.regress = c("nGene"))
neuro.v2 <- RunPCA(object = neuro.v2, pc.genes = neuro.v2@var.genes,
do.print = TRUE, pcs.print = 1:5,genes.print = 5)
PrintPCA(object = pbmc, pcs.print = 2:2, genes.print = 5, use.full = FALSE)
PrintPCA(object = neuro.v2, pcs.print = 2:2, genes.print = 5, use.full = FALSE)
?PrintPCA
PrintPCA(object = neuro.v2, pcs.print = 2:2, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10, use.full = TRUE)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 11)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 12)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 2:2, genes.print = 10)
VizPCA(object = neuro.v2, pcs.use = 1:2)
PCAPlot(object = neuro.v2, dim.1 = 1, dim.2 = 2)
neuro.v2@dr$pca
neuro.v2@dr$pca@key
neuro.v2@dr$pca@sdev
neuro.v2@dr$pca@misc
neuro.v2@dr$pca@cell.embeddings
head(neuro.v2@dr$pca@cell.embeddings)
neuro.v2@dr$pca@cell.embeddings$PC1
neuro.v2@dr$pca@cell.embeddings
typeof(neuro.v2@dr$pca@cell.embeddings)
class(neuro.v2@dr$pca@cell.embeddings)
neuro.v2@dr$pca@cell.embeddings[1]
neuro.v2@dr$pca@cell.embeddings[1, ]
neuro.v2@dr$pca@cell.embeddings[, 1]
neuro.v2@meta.data['PC1'] = neuro.v2@dr$pca@cell.embeddings[, 1]
neuro.v2@meta.data['PC2'] = neuro.v2@dr$pca@cell.embeddings[, 2]
head(neuro.v2@meta.data)
head(neuro.v2@dr$pca@cell.embeddings)
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=CC.Difference))
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=CC.Difference)) + scale_colour_gradient2()
#neuro.v2 <- ScaleData(object = neuro.v2, vars.to.regress = c("nGene", "S.Score", "G2M.Score"))
neuro.v2 <- ScaleData(object = neuro.v2, vars.to.regress = c("nGene", "CC.Difference"))
neuro.v2 <- RunPCA(object = neuro.v2, pc.genes = neuro.v2@var.genes,
do.print = TRUE, pcs.print = 1:5,genes.print = 5)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 2:2, genes.print = 10)
VizPCA(object = neuro.v2, pcs.use = 1:2)
PCAPlot(object = neuro.v2, dim.1 = 1, dim.2 = 2)
head(neuro.v2@dr$pca@cell.embeddings)
neuro.v2@meta.data['PC1'] = neuro.v2@dr$pca@cell.embeddings[, 1]
neuro.v2@meta.data['PC2'] = neuro.v2@dr$pca@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=CC.Difference)) + scale_colour_gradient2()
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=Phase))
#neuro.v2 <- ScaleData(object = neuro.v2, vars.to.regress = c("nGene", "CC.Difference"))
neuro.v2 <- ScaleData(object = neuro.v2, vars.to.regress = c("nGene", "S.Score", "G2M.Score"))
neuro.v2 <- RunPCA(object = neuro.v2, pc.genes = neuro.v2@var.genes,
do.print = TRUE, pcs.print = 1:5,genes.print = 5)
PrintPCA(object = neuro.v2, pcs.print = 1:1, genes.print = 10)
PrintPCA(object = neuro.v2, pcs.print = 2:2, genes.print = 10)
VizPCA(object = neuro.v2, pcs.use = 1:2)
PCAPlot(object = neuro.v2, dim.1 = 1, dim.2 = 2)
head(neuro.v2@dr$pca@cell.embeddings)
neuro.v2@meta.data['PC1'] = neuro.v2@dr$pca@cell.embeddings[, 1]
neuro.v2@meta.data['PC2'] = neuro.v2@dr$pca@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=CC.Difference)) + scale_colour_gradient2()
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=PC1, y=PC2)) + geom_point(aes(color=wierd))
PCHeatmap(object = neuro.v2, pc.use = 1, cells.use = 500, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = neuro.v2, pc.use = 1:12, cells.use = 500, do.balanced = TRUE,
label.columns = FALSE, use.full = FALSE)
PCElbowPlot(object = neuro.v2)
neuro.v2 <- RunTSNE(object = neuro.v2, dims.use = 1:10, do.fast = TRUE)
neuro.v2 <- RunTSNE(object = neuro.v2, dims.use = 1:15, do.fast = TRUE)
TSNEPlot(object = neuro.v2)
head(neuro.v2@dr$tsne@cell.embeddings)
neuro.v2@dr$tsne@cell.embeddings[, 1]
neuro.v2@meta.data['tSNE1'] = neuro.v2@dr$tsne@cell.embeddings[, 1]
neuro.v2@meta.data['tSNE2'] = neuro.v2@dr$tsne@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=tSNE1, y=tSNE2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=tSNE1, y=tSNE2)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=tSNE1, y=tSNE2)) + geom_point(aes(color= nUMI))
ggplot(neuro.v2@meta.data, aes(x=tSNE1, y=tSNE2)) + geom_point(aes(color= nGene))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 5, min_dist = 1)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@umap$tsne@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color= nGene))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 5, min_dist = 3)
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 5, min_dist = 3, spread = 4)
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 5, min_dist = 2)
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 5, min_dist = 0.1)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color= nGene))
?RunUMAP
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:15, n_neighbors = 10, min_dist = 0.01)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(shape= nGene))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(shape=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(shape=wierd, color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:10, n_neighbors = 10, min_dist = 0.01)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color= nGene))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:10, n_neighbors = 20, min_dist = 0.01)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:10, n_neighbors = 30, min_dist = 0.01)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:10, n_neighbors = 50, min_dist = 0.01)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
neuro.v2 <- RunUMAP(object = neuro.v2, dims.use = 1:10, n_neighbors = 50, min_dist = 0.001)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color= nGene))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
neuro.v2 <- RunUMAP(object = neuro.v2, reduction.use='PCA', dims.use = 1:20,
n_neighbors = 50, min_dist = 0.001)
neuro.v2 <- RunUMAP(object = neuro.v2, reduction.use='pca', dims.use = 1:20,
n_neighbors = 50, min_dist = 0.001)
head(neuro.v2@dr$umap@cell.embeddings)
neuro.v2@meta.data['UMAP1'] = neuro.v2@dr$umap@cell.embeddings[, 1]
neuro.v2@meta.data['UMAP2'] = neuro.v2@dr$umap@cell.embeddings[, 2]
head(neuro.v2@meta.data)
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(color=Phase))
ggplot(neuro.v2@meta.data, aes(x=UMAP1, y=UMAP2)) + geom_point(aes(size=wierd, color=wierd))
